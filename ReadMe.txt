//微型框架

1,规定请求的路径必须是如:入口文件地址?_i=控制器名-方法名,可以再config文件里面配置其他的目录访问方式
2,使用自动加载类自动加载extend目录里面所有的类
3,_p参数里面的控制器名称第一个字母可以是小写也可以是大写
4,请求的控制器名保存的常量:CONTROLLER
5,请求的方法名保存的常量:ACTION
6,控制器命名规则为,控制器名Controller.php,这样的命名规则主要是为了避免类里面的方法和类名一致,就是避免受到默认构造方法的影响
7,要求app里面的所有类需要有命名空间命名空间的命名规范"app\模块名\mvc模块名"(加上命名空间可以形成一颗空间树,加快类的加载)
8,控制器基类里面持有了与当前控制器名一致的模型控制器对象(子类控制器继承就拥有了该对象)
9,模型控制器基类里面持有了自定义操作数据库mypdo类的实例(子类模型对象继承了就拥有了该对象)
10,Tool里面的方法:(里面的方法都是静态方法)
	1,getConfig:获得配置文件里面的数组
	2,getObj:自动获取指定app/classes类里面的对象3
	3,loadTemplate:加载模板文件,如果有指定的话就加载指定的模板文件,如果没有指定的话就加载与方法名一致的模板文件
	4,getMyPdo:当需要连表查询的时候,就需要使用到单独的MyPdo对象
	5,request_path:config.php文件里面的request_path数组表示访问的路径设置
	6,建议尽量使用Tool工具类里面的函数而不是手动实例化里面的类,因为Tool类里面大部分是实现了工厂单例